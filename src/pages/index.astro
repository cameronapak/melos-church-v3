---
import Layout from "@/layouts/Layout.astro";
import Navbar from "@sections/Navbar.astro";
import Footer from "@sections/Footer.astro";
import Container from "@sections/Container.astro";
import FAQ from "@sections/FAQ.astro";
import RenderMarkdown from "@/components/RenderMarkdown.astro";
import Logo from "@/components/Logo.astro";

const faqItems = [
  {
    question: "What is Freedom Stack?",
    answer: "Freedom Stack is a full-stack Astro starter kit that feels freeing and is free."
  },
  {
    question: "How can I learn more about Astro?",
    answer:
      "If you want to learn more about the frontend layer, I recommend the [Astro Web Framework Crash Course by freeCodeCamp](https://www.youtube.com/watch?v=e-hTm5VmofI) or check out [Astro's Community Educational Content](https://docs.astro.build/en/community-resources/content/)."
  },
  {
    question: "How can I learn more about Alpine.js?",
    answer:
      "If you want to learn more about Alpine.js, I recommend [Learn Alpine.js on codecourse](https://codecourse.com/courses/learn-alpine-js?ref=freedomstack)."
  },
  {
    question: "How can I learn more about the libSQL database layer?",
    answer:
      "If you want to learn more about the database layer, I recommend first starting with Astro DB's [Getting Started Guide](https://docs.astro.build/en/guides/astro-db/?ref=freedomstack), and then learning from [High Performance SQLite course](https://highperformancesqlite.com/?ref=freedomstack), sponsored by [Turso](https://tur.so/freedomstack)."
  },
  {
    question: "How can I learn more about Better Auth?",
    answer: "[Learn more about Better Auth.](https://www.better-auth.com/docs/integrations/astro?ref=freedomstack)"
  },
  {
    question: "How do I deploy Freedom Stack?",
    answer:
      "You can deploy Freedom Stack to [Netlify](https://app.netlify.com/start/deploy?repository=https://github.com/cameronapak/freedom-stack)."
  },
  {
    question: "How can I learn more about HTMX?",
    answer: "[Learn more about HTMX.](https://htmx.org/?ref=freedomstack)"
  },
  {
    question: "How can I learn more about daisyUI?",
    answer: "[Learn more about daisyUI.](https://daisyui.com/?ref=freedomstack)"
  },
  {
    question: "What's an affordable way to track my website's traffic/analytics?",
    answer:
      "I recommend [One Dollar Stats, by Drizzle](https://onedollarstats.com/?ref=freedomstack), or try out [PostHog](https://posthog.com/?ref=freedomstack)."
  },
  {
    question: "How can I contribute to Freedom Stack?",
    answer:
      "If you'd like to contribute to Freedom Stack, please [open an issue](https://github.com/cameronapak/freedom-stack/issues) or [submit a pull request](https://github.com/cameronapak/freedom-stack/pulls). Or, if you can submit financially, please consider [buying me a coffee](https://buymeacoffee.com/campak)."
  }
];

const letterContentMarkdown = `
Hey, I'm Cam, a front-end designer and developer of over 7 years.

While I loved working on the UI, animations, and interactivity of web apps, I'd always felt held back by not knowing how to
create full-stack web apps.

I knew how to work with API's and someone else's database, but I'd never learned how to build my own until...

_A wild [Astro DB](https://docs.astro.build/en/guides/astro-db/) enters the chat!_

Creating a database table was as easy as:

\`\`\`javascript
import { defineTable } from "astro:db";

const Posts = defineTable({
  columns: {
    id: column.number({ primaryKey: true }),
    title: column.text(),
    pubDate: column.date(),
    description: column.text(),
    author: column.text(),
    imageUrl: column.text({ optional: true }),
    imageAlt: column.text({ optional: true }),
    tags: column.json({ optional: true }),
    slug: column.text({ unique: true }),
    content: column.text()
  }
});
\`\`\`

And, getting all the posts from the database was as easy as:

\`\`\`javascript
import { db, Posts } from "astro:db";

const posts = await db.select().from(Posts).all();
\`\`\`

I found myself building full-stack web apps without really having to think too much about databases. They just worked.

Writing code felt freeing and fun again.

I got this spark and reinvoration to code again after the hardest season of my life, when I was bed-ridden for around seven months. [God](https://www.gotquestions.org/what-is-the-gospel.html) sustained me through
the support of friends and family. He healed me spiritually before physically restoring my health.

After recovering, I finally felt freedom.

My hope is that Freedom Stack empowers you to create the dreams and visions on your mind and heart.

_â€” [Cam Pak](https://cameronpak.com)_
`;

// The browser should always check freshness
Astro.response.headers.set("cache-control", "public, max-age=0, must-revalidate");

// The CDN should cache for a year, but revalidate if the cache tag changes
Astro.response.headers.set("netlify-cdn-cache-control", "s-maxage=31536000");

// Tag the page with the project slug
Astro.response.headers.set("netlify-cache-tag", "components");
---

<Layout
  title="Freedom Stack Boilerplate"
  description="A free full-stack boilerplate that feels freeing. Astro, HTMX, Alpine.js, AstroÂ DB, Better Auth, Preline UI, & daisyUI."
>
  <Navbar
    title="Melos.Church"
    links={[
      { text: "Blog", href: "/posts" },
      { text: "Sign In", href: "/sign-in" }
    ]}
  />

  <section class="min-h-[70vh] h-fit container flex flex-col justify-center items-center py-16">
    <Logo classList="text-slate-800 align-baseline" size="2xl" />
    <h1 class="m-0 !mt-4 text-center text-balance text-5xl leading-tight">
      Melos keeps your church informed and connected
    </h1>
    <p class="text-xl m-0 text-center text-balance">
      Your digital church bulletin is just a link away.
    </p>
    <div class="!mt-8 flex items-center flex-wrap gap-4 justify-center">
      <button class="btn btn-primary">
        Get Started
      </button>
    </div>
  </section>

  <!-- <Container title="Why Freedom Stack?" align="center">
    <div class="bg-white p-6 rounded-xl border-2 border-slate-200 w-full text-xl leading-relaxed">
      <RenderMarkdown content={letterContentMarkdown} />
    </div>
  </Container> -->

  <!-- <FAQ title="FAQ" items={faqItems} /> -->

  <Footer
    links={[
      {
        title: "Resources",
        items: [
          { text: "Code on GitHub", href: "https://github.com/cameronapak/freedom-stack" },
          { text: "Buy Me a Coffee", href: "https://buymeacoffee.com/campak" },
          {
            text: "Deploy to Netlify ðŸš€",
            href: "https://app.netlify.com/start/deploy?repository=https://github.com/cameronapak/freedom-stack"
          }
        ]
      },
      {
        title: "Legal",
        items: [
          { text: "Code of Conduct", href: "https://github.com/cameronapak/freedom-stack?tab=coc-ov-file#readme" },
          { text: "MIT License", href: "https://github.com/cameronapak/freedom-stack?tab=mit-1-ov-file#readme" },
          { text: "Contact Cam", href: "https://cameronpak.com/pages/contact-cam" }
        ]
      }
    ]}
  />
</Layout>
